plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'

	/** [ JWT Library ]
 	 String lowSigniture = Header + Payload + SecretKey;

	 [JWT]
	 BASE64(Header).
	 BASE64(Payload).
	 BASE64(HS256암호화(lowSigniture));

	 -> 이걸 해결해주는 라이브러리가 java-jwt
	 */
	implementation 'com.auth0:java-jwt:3.19.2'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.keycloak:keycloak-core:18.0.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
